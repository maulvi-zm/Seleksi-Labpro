<div id="reviews-list">
  <ul class="space-y-4 max-h-[654px] overflow-y-scroll mb-4">
    <% data.reviews.forEach(review => { %>
    <li class="bg-[#141414] border border-[#262626] rounded-xl p-6 flex flex-col gap-2" id="review-<%= review.review_id %>">
      <div class="flex justify-between items-center">
        <div class="flex flex-col">
          <h3 class="text-white text-sm">
            <%= review.User.first_name %>
          </h3>
          <sl-relative-time date="<%= review.created_at %>" class="text-[#999999] text-sm"></sl-relative-time>
        </div>
        <div class="flex gap-2 items-center">
          <% if (review.owned) { %>
            <button type="submit" name="trash3" label="Delete Review" class="text-red-700 flex items-center" onclick="deleteReview('<%= review.review_id %>')">
              <sl-icon name="trash3"></sl-icon>
            </button>
          <% } %>
          <sl-rating label="Rating" readonly value="<%= review.star %>" precision style="--symbol-size: 1rem"></sl-rating>
        </div>
      </div>
      <p class="text-white text-sm">
        <%= review.comment %>
      </p>
    </li>
    <% }); %>
  </ul>

  <nav class="w-full flex justify-center">
    <ul class="flex gap-4 text-white">
      <% const limit = 5 %>
      <% const totalPages = Math.ceil(data.total / limit); %>
      <% const startPage = Math.max(1, data.page - Math.floor(limit / 2)); %>
      <% const endPage = Math.min(totalPages, startPage + limit - 1); %>

      <% if (data.page > 1) { %>
      <li class="w-12 h-12 flex items-center justify-center border-[#262626] bg-black border rounded-md hover:brightness-125">
        <button value="<%= data.page - 1 %>" class="review-page-button w-full">
          <sl-icon name="chevron-left"></sl-icon>
        </button>
      </li>
      <% } %>

      <% for (let i = startPage; i <= endPage; i++) { %>
      <li class="w-12 h-12 flex items-center justify-center border-[#262626] border rounded-md <%= i === data.page ? 'bg-red-700' : 'bg-black' %> hover:brightness-125">
        <button value="<%= i %>" class="review-page-button w-full"><%= i %></button>
      </li>
      <% } %>

      <% if (data.page < totalPages) { %>
      <li class="w-12 h-12 flex items-center justify-center border-[#262626] bg-black border rounded-md hover:brightness-125">
        <button value="<%= data.page + 1 %>" class="review-page-button w-full">
          <sl-icon name="chevron-right"></sl-icon>
        </button>
      </li>
      <% } %>
    </ul>
  </nav>
</div>

<script>
  function deleteReview(reviewId) {
    if (!reviewId) {
      console.error('Review ID not found');
      return;
    }

    reviewId = parseInt(reviewId, 10);

    const confirmation = confirm('Are you sure you want to delete this review?');
    if (!confirmation) {
      return;
    }

    fetch(`/reviews/${reviewId}`, {
      method: 'DELETE',
    })
    .then(response => response.json())
    .then(result => {
      if (result.status === 'success') {
        document.getElementById(`review-${reviewId}`).remove();
      } else {
        alert('Failed to delete review:', result.message);
      }
    })
    .catch(error => {
      console.error('Fetch error:', error);
    });
  }

  function setupDialog() {
    const dialog = document.querySelectorAll('.dialog-edit-overview');

    dialog.forEach((dialog) => {
      const openButton = dialog.nextElementSibling;
      const closeButton = dialog.querySelector('sl-button[slot="footer"]');

      openButton.addEventListener('click', () => {
        dialog.show();
      });

      closeButton.addEventListener('click', () => {
        dialog.hide();
      });
    });
  }

  document.addEventListener('DOMContentLoaded', () => {
    const attachEventListeners = () => {
      const reviewPageButtons = document.querySelectorAll('.review-page-button');
      reviewPageButtons.forEach(button => {
        button.addEventListener('click', async (e) => {
          e.preventDefault();
          const page = button.value;
          const filmId = window.location.pathname.split('/').pop();

          try {
            const response = await fetch(`/reviews/${filmId}?page=${page}`);
            if (!response.ok) {
              throw new Error('Network response was not ok');
            }
            const data = await response.text();
            const parser = new DOMParser();
            const doc = parser.parseFromString(data, 'text/html');
            const newReviewsList = doc.getElementById('reviews-list');

            if (newReviewsList) {
              document.getElementById('reviews-list').innerHTML = newReviewsList.innerHTML;
              attachEventListeners();
            } else {
              console.error('Could not find reviews-list in the fetched HTML');
            }
          } catch (error) {
            console.error('Fetch error:', error);
          }
        });
      });
    };

    attachEventListeners();
  });
    setupReviewForm();
    setupDialog();
</script>